{
  "name": "wufoo",
  "description": "Wrapper for the Wufoo API (http://www.wufoo.com/docs/api/v3/)",
  "version": "1.0.0",
  "author": {
    "name": "Justin Law",
    "email": "<hello@justinlaw.org"
  },
  "dependencies": {
    "request": "~2.0.0"
  },
  "main": "index",
  "repository": {
    "type": "git",
    "url": "https://github.com/jusx/node-wufoo.git"
  },
  "homepage": "https://github.com/jusx/node-wufoo",
  "keywords": [
    "wufoo",
    "wufoo api",
    "api"
  ],
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/jusx/node-wufoo/issues"
  },
  "engines": [
    "node >= 0.8.0"
  ],
  "readme": "# Node-Wufoo \n\nNode-Wufoo is a [Wufoo API] (http://www.wufoo.com/docs/api/v3/) wrapper for [node.js] (http://nodejs.org/). It simplifies working with the Wufoo API and provides an abstraction layer.\n\n## Installation\n\n    $ npm install wufoo\n   \n## Usage\n\nEach API returns it's own set of objects which is all documented on [Wufoo.com] (http://www.wufoo.com/docs/api/v3/) for reference. \n\n### Example\n\n```javascript\n   var Wufoo = require(\"wufoo\");\n   var wufoo = new Wufoo(\"fishbowl\", \"AOI6-LFKL-VM1Q-IEX9\");\n   \n   wufoo.getForms(function(err, forms) {\n      // do something with your forms here.\n   });\n   \n   // get a specific form given the id.\n   wufoo.getForm(\"idofForm\", function(err, form){\n      // do something with your form here.\n   });\n   \n   wufoo.getFormEntries(\"idofForm\", function(err, entries) {\n      // do something with your entries here.\n   });\n```   \n\n### Forms\n\nGet all the forms for an account. <code>getForms</code> returns an array of <code>Form</code> objects. You can also call <code>getForm</code> to get a specific <code>Form</code>.\n\n```javascript\n\n   wufoo.getForms(function(err, forms) {\n      console.log(form.hash);\n      console.log(form.name);\n      console.log(form.description);\n      // do something here.\n   });\n   \n   // get a specific form given the id.\n   wufoo.getForm(\"idofForm\", function(err, form){\n      // do something here.\n   });\n   \n```   \n\nConvenience methods are provided to get entries, fields and entry count for a <code>Form</code>:\n\n```javascript\n\n   form.getEntries(function(err, entries) {\n     // do something here.\n   });\n   \n   form.getEntriesCount(function(err, count) {\n      // do something here.\n      console.log(\"There are \" + count + \" number of entries\");\n    });\n   \n    form.getFields(function(err, fields) {\n        // do something here.\n    });\n```   \n\n\n### Entries\n\nGet all the entries for a form or report. <code>getFormEntries</code> and <code>getReportEntries</code> returns an array of <code>Entry</code> objects.\n\n```javascript\n\n   wufoo.getFormEntries(formid, function(err, entries) {\n      // do something here.\n   });\n\n   wufoo.getReportEntries(reportid, function(err, entries) {\n      // do something here.\n   });\n   \n```   \n\n### Reports\n\nGet all the reports for an account. <code>getReports</code> returns an array of <code>Report</code> objects.\n\n```javascript\n\n   wufoo.getReports(function(err, reports) {\n      // do something here\n   });\n   \n   // get a specific form given the id.\n   wufoo.getReport(\"idofReport\", function(err, report){\n      // do something here.\n   });\n   \n```   \nConvenience methods are provided to get entries, fields and entry count for a Report:\n\n```javascript\n\n   report.getEntries(function(err, entries) {\n     // do something here.\n   });\n   \n   report.getEntriesCount(function(err, count) {\n      // do something here.\n      console.log(\"There are \" + count + \" number of entries\");\n    });\n   \n    report.getFields(function(err, fields) {\n      // do something here.\n    });\n```   \n\n\n\n### Fields\nGet all the reports for a form. <code>getFields</code> returns an array of <code>Field</code> objects.\n\n```javascript\n\n   wufoo.getFields(formid, function(err, fields) {\n      // do something here.\n   });\n   \n```\n\n### Widgets\nGet all the widgets for a report. <code>getWidgets</code> returns an array of <code>Widget</code> objects.\n\n```javascript\n\n   wufoo.getWidgets(reportid, function(err, widgets) {\n      // do something here.\n   });\n   \n```\n\n### Comments\nGet all the comments for a form. <code>getComments</code> returns an array of <code>Comment</code> objects.\n\n```javascript\n\n   wufoo.getComments(formid, function(err, comments) {\n      // do something here.\n   });\n   \n```\n\nAlternatively if all you need is the amount of comments for a form you can call <code>getCommentCount</code>:\n```javascript\n\n   wufoo.getCommentCount(formid, function(err, count) {\n      // do something here.\n   });\n   \n```\n\n### WebHooks\nAdd a [WebHook] (http://www.wufoo.com/docs/api/v3/webhooks/put/) for a form:\n\n```javascript\n  \n   wufoo.webhook().add(\"formid\", \"http://localhost:3000\", function(err, hashid) {\n     // store the webhook hashid somewhere in case we want to delete them later.\n   })\n   \n   // pass in optional options\n   var options = {url: \"http://abc.com/webhook\", handshakeKey: \"hand-shaking\", metadata: true}\n   wufoo.webhook().add(\"formid\", options, function(err, hashid) {\n     // store the webhook hashid somewhere in case we want to delete them later.\n     db.put(\"WebHooks\", {formid:form.hash, key:hashid});\n   })\n```\n\nDelete the WebHook. [More info] (http://www.wufoo.com/docs/api/v3/webhooks/delete/):\n   \n```javascript   \n   wufoo.webhook().delete(\"formid\", \"webhookHashId\", function(err, success) {\n     if (!success) {\n       // do something.\n     }\n      \n   })\n   \n```\n\nHelper methods are also provided on the <code>Form</code> object:\n\n\n   ```javascript   \n      form.addWebhook(\"http://localhost:3000\", function(err, hashid) {\n         // store the webhook hashid somewhere in case we want to delete them later.\n       })\n      \n   \n      form.deleteWebhook(\"webhookHashId\", function(err, success) {\n        if (!success) {\n          // do something.\n        }\n\n      })\n\n   ```\n\n\n## Contributions\n\nPlease fork it. Add new features or fix bugs and do a pull request. Tests should be included:\n\n- Fork it\n- Create your feature branch (<code>git checkout -b feature-new-stuff</code>).\n- Commit your changes (<code>git commit -am 'Added some feature'</code>).\n- Push to the branch (<code>git push origin feature-new-stuff</code>).\n- Create new Pull Request.\n\n### Testing\nBe sure to have [mocha](http://visionmedia.github.io/mocha/) installed. Run the entire test suite from the root directory of the project:\n        \n    $ mocha\n\n## Future Versions\nNode-Wufoo implements almost all of the Wufoo RESTful API except the following: \n\n- Updating Entries ([POST API] (http://www.wufoo.com/docs/api/v3/entries/post/)).\n- [Login] (http://www.wufoo.com/docs/api/v3/login/).\n\nImplementation and support of the above will be included in future versions. ",
  "readmeFilename": "README.md",
  "_id": "wufoo@1.0.0",
  "_from": "wufoo@"
}
